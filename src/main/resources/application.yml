micronaut:
  application:
    name: micronautJava
  security:
    authentication: bearer
    token:
      jwt:
        generator:
          access-token:
            expiration: 86400
        signatures:
          secret:
            generator:
              secret: ${JWT_SECRET:'eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTYyNjY4MTQ0MCwiaWF0IjoxNjI2NjgxNDQwfQ.JE2WJs6egnvAriXdmz1qjIBQgrNZpONMH8YXDTczSSY'}
              jws-algorithm: HS256
  server:
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:8080
          allowedMethods:
            - POST
            - PUT
            - GET
            - DELETE
          allowedHeaders:
            - Content-Type
            - Authorization
            - Accept
          exposedHeaders:
            - Content-Type
            - Authorization
          allowedCredentials: false
          maxAge: 3600
    netty:
      access-logger:
        enabled: true
        logger-name: netty-logger
        log-format: common

datasources:
  default:
    url: jdbc:postgresql://${DB_URL:localhost}:${DB_PORT:5432}/${DB_NAME:java}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:password}
    driverClassName: ${DB_DRIVER:org.postgresql.Driver}
jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        show_sql: true
    packages-to-scan:
      - 'micronaut.java.person'
      - 'micronaut.java.users'
      - 'micronaut.java.blog.posts'
    entity-scan:
      packages:
        - 'micronaut.java.person'
        - 'micronaut.java.users'
        - 'micronaut.java.blog.posts'



